/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  VideoDetails as PrismaVideoDetails,
  Video as PrismaVideo,
} from "@prisma/client";

export class VideoDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VideoDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.videoDetails.count(args);
  }

  async videoDetailsItems(
    args: Prisma.VideoDetailsFindManyArgs
  ): Promise<PrismaVideoDetails[]> {
    return this.prisma.videoDetails.findMany(args);
  }
  async videoDetails(
    args: Prisma.VideoDetailsFindUniqueArgs
  ): Promise<PrismaVideoDetails | null> {
    return this.prisma.videoDetails.findUnique(args);
  }
  async createVideoDetails(
    args: Prisma.VideoDetailsCreateArgs
  ): Promise<PrismaVideoDetails> {
    return this.prisma.videoDetails.create(args);
  }
  async updateVideoDetails(
    args: Prisma.VideoDetailsUpdateArgs
  ): Promise<PrismaVideoDetails> {
    return this.prisma.videoDetails.update(args);
  }
  async deleteVideoDetails(
    args: Prisma.VideoDetailsDeleteArgs
  ): Promise<PrismaVideoDetails> {
    return this.prisma.videoDetails.delete(args);
  }

  async getVideo(parentId: string): Promise<PrismaVideo | null> {
    return this.prisma.videoDetails
      .findUnique({
        where: { id: parentId },
      })
      .video();
  }
}
